.button {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	font-weight: 500;
	line-height: 1;
	text-decoration: none;
	border: 1px solid transparent;
	border-radius: var(--radius-sm);
	cursor: pointer;
	transition: var(--transition-base);
	white-space: nowrap;
	user-select: none;
	position: relative;
	outline: none;
	font-family: inherit;
}

.button:focus {
	outline: 2px solid var(--color-primary);
	outline-offset: 2px;
}

.button:active {
	transform: scale(0.98);
}

/* Sizes */
.small {
	padding: var(--space-2) var(--space-3);
	font-size: 0.875rem;
	min-height: 2rem;
}

.medium {
	padding: var(--space-2) var(--space-4);
	font-size: 0.875rem;
	min-height: 2.5rem;
}

.large {
	padding: var(--space-3) var(--space-6);
	font-size: 1rem;
	min-height: 3rem;
}

/* Variants */
.primary {
	background-color: var(--color-primary);
	color: var(--color-background-primary);
	border-color: var(--color-primary);
}

.primary:hover:not(:disabled) {
	background-color: var(--color-primary-hover);
	border-color: var(--color-primary-hover);
}

.secondary {
	background-color: var(--color-secondary);
	color: var(--color-background-primary);
	border-color: var(--color-secondary);
}

.secondary:hover:not(:disabled) {
	background-color: var(--color-secondary-hover);
	border-color: var(--color-secondary-hover);
}

.outlined {
	background-color: transparent;
	color: var(--color-primary);
	border-color: var(--color-primary);
}

.outlined:hover:not(:disabled) {
	background-color: var(--color-primary);
	color: var(--color-background-primary);
}

.ghost {
	background-color: transparent;
	color: var(--color-text-primary);
	border-color: transparent;
}

.ghost:hover:not(:disabled) {
	background-color: var(--color-background-tertiary);
}

.success {
	background-color: var(--color-success);
	color: var(--color-background-primary);
	border-color: var(--color-success);
}

.success:hover:not(:disabled) {
	background-color: var(--color-success-hover);
	border-color: var(--color-success-hover);
}

.warning {
	background-color: var(--color-warning);
	color: var(--color-background-primary);
	border-color: var(--color-warning);
}

.warning:hover:not(:disabled) {
	background-color: var(--color-warning-hover);
	border-color: var(--color-warning-hover);
}

.error {
	background-color: var(--color-error);
	color: var(--color-background-primary);
	border-color: var(--color-error);
}

.error:hover:not(:disabled) {
	background-color: var(--color-error-hover);
	border-color: var(--color-error-hover);
}

/* States */
.button:disabled {
	opacity: 0.5;
	cursor: not-allowed;
	pointer-events: none;
}

.loading {
	cursor: not-allowed;
	pointer-events: none;
	border: 0;
}

.fullWidth {
	width: 100%;
}

/* Content and icons */
.content {
	display: flex;
	align-items: center;
	justify-content: center;
}

.loading .content {
	opacity: 0;
}

.iconLeft {
	display: flex;
	align-items: center;
	margin-right: var(--space-2);
}

.iconRight {
	display: flex;
	align-items: center;
	margin-left: var(--space-2);
}

.small .iconLeft {
	margin-right: var(--space-1);
}

.small .iconRight {
	margin-left: var(--space-1);
}

.large .iconLeft {
	margin-right: var(--space-3);
}

.large .iconRight {
	margin-left: var(--space-3);
}

/* Loading spinner */
.spinner {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	width: 1rem;
	height: 1rem;
	border: 2px solid transparent;
	border-top: 2px solid currentColor;
	border-radius: var(--radius-full);
	animation: spin 1s linear infinite;
}

.small .spinner {
	width: 0.875rem;
	height: 0.875rem;
}

.large .spinner {
	width: 1.125rem;
	height: 1.125rem;
}

@keyframes spin {
	to {
		transform: translate(-50%, -50%) rotate(360deg);
	}
}

/* Icon-only buttons */
.button:has(.iconLeft):not(:has(.content:not(:empty))),
.button:has(.iconRight):not(:has(.content:not(:empty))) {
	padding: var(--space-2);
}

.small.button:has(.iconLeft):not(:has(.content:not(:empty))),
.small.button:has(.iconRight):not(:has(.content:not(:empty))) {
	padding: var(--space-2);
}

.large.button:has(.iconLeft):not(:has(.content:not(:empty))),
.large.button:has(.iconRight):not(:has(.content:not(:empty))) {
	padding: var(--space-3);
}

/* Dark mode support */
@media (prefers-color-scheme: dark) {
	.ghost {
		color: var(--color-dark-text-secondary);
	}

	.ghost:hover:not(:disabled) {
		background-color: var(--color-dark-background-secondary);
	}

	.outlined {
		color: var(--color-primary-dark);
		border-color: var(--color-primary-dark);
	}

	.outlined:hover:not(:disabled) {
		background-color: var(--color-primary-dark);
		color: var(--color-dark-background-primary);
	}
}

/* Focus visible for better accessibility */
@supports selector(:focus-visible) {
	.button:focus {
		outline: none;
	}

	.button:focus-visible {
		outline: 2px solid var(--color-primary);
		outline-offset: 2px;
	}
}

/* Responsive adjustments */
@media (max-width: 768px) {
	.large {
		padding: 0.625rem 1.25rem;
		font-size: 0.875rem;
		min-height: 2.75rem;
	}
}
